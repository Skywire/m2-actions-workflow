name: Deploy

on:
    release:
        types:
            - published
        branches:
            - main

jobs:
    production_deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1

            - name: Setup hosts
              run: sudo echo "${{ secrets.DESTINATION_HOSTNAME }}  ${{ secrets.DEP_HOST_ALIAS }}" | sudo tee -a /etc/hosts

            - name: Install Open VPN
              run: sudo apt-get install openvpn
            - name: Decode certificate
              run: |
                  echo "${{ secrets.OPENVPN_CERTIFICATE }}" > .enc_cert
                  base64 -d .enc_cert > .github/workflows/config/openvpn/openvpn.p12
            - name: Connect VPN
              run: sudo openvpn --config .github/workflows/config/openvpn/openvpn.conf &
            - name: Check Connect VPN
              run: ping -c 2 ${{ secrets.DESTINATION_HOSTNAME }}

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
              with:
                  php-version: 7.4
                  extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Composer Install
              run: composer install --no-progress --prefer-dist --optimize-autoloader --ignore-platform-reqs

            - name: Deploy
              uses: deployphp/action@v1
              with:
                  private-key: ${{ secrets.DESTINATION_HOST_PRIVATE_KEY }}
                  dep: deploy prod
                  known-hosts: |
                      ${{ secrets.KNOWN_HOSTS }}
                  ssh-config: |
                      ${{ secrets.SSH_CONFIG_FILE }}

            - name: kill vpn
              if: always()
              run: sudo killall openvpn
