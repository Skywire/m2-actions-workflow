name: Magento 2 Tests

# TODO Enable the on branches
#on:
#  push:
#    branches: [  ]
#  pull_request:
#    branches: [  ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: magento_integration_tests
          MYSQL_ROOT_PASSWORD: 123123q
        ports:
          - 3306:3306

    env:
      extensions: bcmath, ctype, curl, dom, gd, hash, iconv, intl, mbstring, openssl, pdo_mysql, simplexml, soap, xsl, zip, libxml
      key: php-cache-v1 # can be any string, change to clear the extension cache.
      php-version: '7.3'

    steps:
      - uses: actions/checkout@v2

      - name: Setup Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache PHP extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.extensions }}
          coverage: xdebug

      - name: Setup RabbitMQ
        uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: unit tests
        run: |
          cp .github/workflows/config/unit/* dev/tests/unit/
          cd dev/tests/unit
          ../../../vendor/bin/phpunit -c phpunit.xml

      - name: integration tests
        run: |
          cp -r .github/workflows/config/integration/* dev/tests/integration/
          cd dev/tests/integration
          ../../../vendor/bin/phpunit -c phpunit.xml